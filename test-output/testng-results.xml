<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="25" passed="23" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-07-01T02:41:47 IST" name="Demoblaze Automation Suite" finished-at="2025-07-01T02:47:14 IST" duration-ms="326264">
    <groups>
    </groups>
    <test started-at="2025-07-01T02:41:47 IST" name="Demoblaze Tests" finished-at="2025-07-01T02:47:14 IST" duration-ms="326264">
      <class name="tests.LoginTest">
        <test-method is-config="true" signature="setupReport()[pri:0, instance:tests.LoginTest@5aa9e4eb]" started-at="2025-07-01T02:41:47 IST" name="setupReport" finished-at="2025-07-01T02:41:47 IST" duration-ms="647" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupReport -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.LoginTest@5aa9e4eb]" started-at="2025-07-01T02:41:47 IST" name="setup" finished-at="2025-07-01T02:41:52 IST" duration-ms="4713" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="loginWithValidCredentials()[pri:1, instance:tests.LoginTest@5aa9e4eb]" started-at="2025-07-01T02:41:52 IST" name="loginWithValidCredentials" finished-at="2025-07-01T02:42:02 IST" duration-ms="9529" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithValidCredentials -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.LoginTest@5aa9e4eb]" started-at="2025-07-01T02:42:02 IST" name="tearDown" finished-at="2025-07-01T02:42:02 IST" duration-ms="390" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginWithValidCredentials status=SUCCESS method=LoginTest.loginWithValidCredentials()[pri:1, instance:tests.LoginTest@5aa9e4eb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.LoginTest@5aa9e4eb]" started-at="2025-07-01T02:42:02 IST" name="setup" finished-at="2025-07-01T02:42:04 IST" duration-ms="2075" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="loginWithWrongPassword()[pri:2, instance:tests.LoginTest@5aa9e4eb]" started-at="2025-07-01T02:42:04 IST" name="loginWithWrongPassword" finished-at="2025-07-01T02:42:13 IST" duration-ms="9238" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithWrongPassword -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.LoginTest@5aa9e4eb]" started-at="2025-07-01T02:42:13 IST" name="tearDown" finished-at="2025-07-01T02:42:14 IST" duration-ms="386" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginWithWrongPassword status=SUCCESS method=LoginTest.loginWithWrongPassword()[pri:2, instance:tests.LoginTest@5aa9e4eb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.LoginTest@5aa9e4eb]" started-at="2025-07-01T02:42:14 IST" name="setup" finished-at="2025-07-01T02:42:16 IST" duration-ms="2047" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="loginWithEmptyFields()[pri:3, instance:tests.LoginTest@5aa9e4eb]" started-at="2025-07-01T02:42:16 IST" name="loginWithEmptyFields" finished-at="2025-07-01T02:42:24 IST" duration-ms="8545" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithEmptyFields -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.LoginTest@5aa9e4eb]" started-at="2025-07-01T02:42:24 IST" name="tearDown" finished-at="2025-07-01T02:42:25 IST" duration-ms="548" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginWithEmptyFields status=SUCCESS method=LoginTest.loginWithEmptyFields()[pri:3, instance:tests.LoginTest@5aa9e4eb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.LoginTest@5aa9e4eb]" started-at="2025-07-01T02:42:25 IST" name="setup" finished-at="2025-07-01T02:42:27 IST" duration-ms="2023" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="loginWithInvalidEmailFormat()[pri:4, instance:tests.LoginTest@5aa9e4eb]" started-at="2025-07-01T02:42:27 IST" name="loginWithInvalidEmailFormat" finished-at="2025-07-01T02:42:35 IST" duration-ms="8342" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithInvalidEmailFormat -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.LoginTest@5aa9e4eb]" started-at="2025-07-01T02:42:35 IST" name="tearDown" finished-at="2025-07-01T02:42:36 IST" duration-ms="361" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginWithInvalidEmailFormat status=SUCCESS method=LoginTest.loginWithInvalidEmailFormat()[pri:4, instance:tests.LoginTest@5aa9e4eb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.LoginTest@5aa9e4eb]" started-at="2025-07-01T02:42:36 IST" name="setup" finished-at="2025-07-01T02:42:38 IST" duration-ms="1939" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyPasswordIsMasked()[pri:5, instance:tests.LoginTest@5aa9e4eb]" started-at="2025-07-01T02:42:38 IST" name="verifyPasswordIsMasked" finished-at="2025-07-01T02:42:43 IST" duration-ms="5850" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPasswordIsMasked -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.LoginTest@5aa9e4eb]" started-at="2025-07-01T02:42:43 IST" name="tearDown" finished-at="2025-07-01T02:42:44 IST" duration-ms="372" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyPasswordIsMasked status=SUCCESS method=LoginTest.verifyPasswordIsMasked()[pri:5, instance:tests.LoginTest@5aa9e4eb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="flushReport()[pri:0, instance:tests.LoginTest@5aa9e4eb]" started-at="2025-07-01T02:47:14 IST" name="flushReport" finished-at="2025-07-01T02:47:14 IST" duration-ms="508" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReport -->
      </class> <!-- tests.LoginTest -->
      <class name="tests.OrderTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.OrderTest@3eb25e1a]" started-at="2025-07-01T02:44:14 IST" name="setup" finished-at="2025-07-01T02:44:16 IST" duration-ms="1840" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="placeOrderWithValidDetails()[pri:1, instance:tests.OrderTest@3eb25e1a]" started-at="2025-07-01T02:44:16 IST" name="placeOrderWithValidDetails" finished-at="2025-07-01T02:44:41 IST" duration-ms="24699" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- placeOrderWithValidDetails -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.OrderTest@3eb25e1a]" started-at="2025-07-01T02:44:41 IST" name="tearDown" finished-at="2025-07-01T02:44:41 IST" duration-ms="376" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=placeOrderWithValidDetails status=SUCCESS method=OrderTest.placeOrderWithValidDetails()[pri:1, instance:tests.OrderTest@3eb25e1a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.OrderTest@3eb25e1a]" started-at="2025-07-01T02:44:41 IST" name="setup" finished-at="2025-07-01T02:44:43 IST" duration-ms="1726" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="placeOrderWithEmptyForm()[pri:2, instance:tests.OrderTest@3eb25e1a]" started-at="2025-07-01T02:44:43 IST" name="placeOrderWithEmptyForm" finished-at="2025-07-01T02:45:08 IST" duration-ms="25459" status="FAIL">
          <exception class="org.openqa.selenium.UnhandledAlertException">
            <message>
              <![CDATA[unexpected alert open: {Alert text : Please fill out Name and Creditcard.}
  (Session info: chrome=136.0.7103.93): Please fill out Name and Creditcard.
Build info: version: '4.19.1', revision: 'abe0ee07dc'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.7'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [04505c5f56430680ee7ec31e7eb505a4, findElements {value=orderModalLabel, using=id}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 136.0.7103.93, chrome: {chromedriverVersion: 136.0.7103.113 (76fa3c17824..., userDataDir: C:\Users\Sathya\AppData\Loc...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:55004}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:55004/devtoo..., se:cdpVersion: 136.0.7103.93, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 04505c5f56430680ee7ec31e7eb505a4]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.UnhandledAlertException: unexpected alert open: {Alert text : Please fill out Name and Creditcard.}
  (Session info: chrome=136.0.7103.93): Please fill out Name and Creditcard.
Build info: version: '4.19.1', revision: 'abe0ee07dc'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.7'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [04505c5f56430680ee7ec31e7eb505a4, findElements {value=orderModalLabel, using=id}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 136.0.7103.93, chrome: {chromedriverVersion: 136.0.7103.113 (76fa3c17824..., userDataDir: C:\Users\Sathya\AppData\Loc...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:55004}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:55004/devtoo..., se:cdpVersion: 136.0.7103.93, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 04505c5f56430680ee7ec31e7eb505a4
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:136)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:518)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElements(ElementLocation.java:182)
at org.openqa.selenium.remote.ElementLocation.findElements(ElementLocation.java:103)
at org.openqa.selenium.remote.RemoteWebDriver.findElements(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElements(RemoteWebDriver.java:362)
at tests.OrderTest.placeOrderWithEmptyForm(OrderTest.java:90)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:228)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:961)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:201)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:819)
at org.testng.TestRunner.run(TestRunner.java:619)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1228)
at org.testng.TestNG.runSuites(TestNG.java:1134)
at org.testng.TestNG.run(TestNG.java:1101)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.UnhandledAlertException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- placeOrderWithEmptyForm -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.OrderTest@3eb25e1a]" started-at="2025-07-01T02:45:08 IST" name="tearDown" finished-at="2025-07-01T02:45:09 IST" duration-ms="648" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=placeOrderWithEmptyForm status=FAILURE method=OrderTest.placeOrderWithEmptyForm()[pri:2, instance:tests.OrderTest@3eb25e1a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.OrderTest@3eb25e1a]" started-at="2025-07-01T02:45:09 IST" name="setup" finished-at="2025-07-01T02:45:11 IST" duration-ms="2021" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyOrderConfirmationPopup()[pri:3, instance:tests.OrderTest@3eb25e1a]" started-at="2025-07-01T02:45:11 IST" name="verifyOrderConfirmationPopup" finished-at="2025-07-01T02:45:37 IST" duration-ms="25913" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyOrderConfirmationPopup -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.OrderTest@3eb25e1a]" started-at="2025-07-01T02:45:37 IST" name="tearDown" finished-at="2025-07-01T02:45:37 IST" duration-ms="375" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyOrderConfirmationPopup status=SUCCESS method=OrderTest.verifyOrderConfirmationPopup()[pri:3, instance:tests.OrderTest@3eb25e1a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.OrderTest -->
      <class name="tests.SignupTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.SignupTest@662ac478]" started-at="2025-07-01T02:42:44 IST" name="setup" finished-at="2025-07-01T02:42:46 IST" duration-ms="1825" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="signUpWithUniqueCredentials()[pri:1, instance:tests.SignupTest@662ac478]" started-at="2025-07-01T02:42:46 IST" name="signUpWithUniqueCredentials" finished-at="2025-07-01T02:42:54 IST" duration-ms="8071" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signUpWithUniqueCredentials -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.SignupTest@662ac478]" started-at="2025-07-01T02:42:54 IST" name="tearDown" finished-at="2025-07-01T02:42:54 IST" duration-ms="373" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=signUpWithUniqueCredentials status=SUCCESS method=SignupTest.signUpWithUniqueCredentials()[pri:1, instance:tests.SignupTest@662ac478] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.SignupTest@662ac478]" started-at="2025-07-01T02:42:54 IST" name="setup" finished-at="2025-07-01T02:42:56 IST" duration-ms="1850" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="signUpWithExistingUsername()[pri:2, instance:tests.SignupTest@662ac478]" started-at="2025-07-01T02:42:56 IST" name="signUpWithExistingUsername" finished-at="2025-07-01T02:43:04 IST" duration-ms="8070" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signUpWithExistingUsername -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.SignupTest@662ac478]" started-at="2025-07-01T02:43:04 IST" name="tearDown" finished-at="2025-07-01T02:43:04 IST" duration-ms="358" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=signUpWithExistingUsername status=SUCCESS method=SignupTest.signUpWithExistingUsername()[pri:2, instance:tests.SignupTest@662ac478] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.SignupTest@662ac478]" started-at="2025-07-01T02:43:04 IST" name="setup" finished-at="2025-07-01T02:43:06 IST" duration-ms="1948" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="signUpWithEmptyFields()[pri:3, instance:tests.SignupTest@662ac478]" started-at="2025-07-01T02:43:06 IST" name="signUpWithEmptyFields" finished-at="2025-07-01T02:43:14 IST" duration-ms="7752" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signUpWithEmptyFields -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.SignupTest@662ac478]" started-at="2025-07-01T02:43:14 IST" name="tearDown" finished-at="2025-07-01T02:43:15 IST" duration-ms="410" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=signUpWithEmptyFields status=SUCCESS method=SignupTest.signUpWithEmptyFields()[pri:3, instance:tests.SignupTest@662ac478] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.SignupTest -->
      <class name="tests.CartTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.CartTest@6743e411]" started-at="2025-07-01T02:43:15 IST" name="setup" finished-at="2025-07-01T02:43:17 IST" duration-ms="2094" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="addProductToCart()[pri:1, instance:tests.CartTest@6743e411]" started-at="2025-07-01T02:43:17 IST" name="addProductToCart" finished-at="2025-07-01T02:43:31 IST" duration-ms="14215" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addProductToCart -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.CartTest@6743e411]" started-at="2025-07-01T02:43:31 IST" name="tearDown" finished-at="2025-07-01T02:43:31 IST" duration-ms="387" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addProductToCart status=SUCCESS method=CartTest.addProductToCart()[pri:1, instance:tests.CartTest@6743e411] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.CartTest@6743e411]" started-at="2025-07-01T02:43:31 IST" name="setup" finished-at="2025-07-01T02:43:33 IST" duration-ms="1904" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="viewCartWithAddedProducts()[pri:2, instance:tests.CartTest@6743e411]" started-at="2025-07-01T02:43:33 IST" name="viewCartWithAddedProducts" finished-at="2025-07-01T02:43:37 IST" duration-ms="3580" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- viewCartWithAddedProducts -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.CartTest@6743e411]" started-at="2025-07-01T02:43:37 IST" name="tearDown" finished-at="2025-07-01T02:43:37 IST" duration-ms="331" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=viewCartWithAddedProducts status=SUCCESS method=CartTest.viewCartWithAddedProducts()[pri:2, instance:tests.CartTest@6743e411] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.CartTest@6743e411]" started-at="2025-07-01T02:43:37 IST" name="setup" finished-at="2025-07-01T02:43:39 IST" duration-ms="1786" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="removeProductFromCart()[pri:3, instance:tests.CartTest@6743e411]" started-at="2025-07-01T02:43:39 IST" name="removeProductFromCart" finished-at="2025-07-01T02:43:46 IST" duration-ms="6811" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [false] but found [true]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertFalse(Assert.java:79)
at org.testng.Assert.assertFalse(Assert.java:89)
at tests.CartTest.removeProductFromCart(CartTest.java:56)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:228)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:961)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:201)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:819)
at org.testng.TestRunner.run(TestRunner.java:619)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1228)
at org.testng.TestNG.runSuites(TestNG.java:1134)
at org.testng.TestNG.run(TestNG.java:1101)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- removeProductFromCart -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.CartTest@6743e411]" started-at="2025-07-01T02:43:46 IST" name="tearDown" finished-at="2025-07-01T02:43:46 IST" duration-ms="643" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=removeProductFromCart status=FAILURE method=CartTest.removeProductFromCart()[pri:3, instance:tests.CartTest@6743e411] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.CartTest@6743e411]" started-at="2025-07-01T02:43:46 IST" name="setup" finished-at="2025-07-01T02:43:48 IST" duration-ms="1805" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="addMultipleProductsToCart()[pri:4, instance:tests.CartTest@6743e411]" started-at="2025-07-01T02:43:48 IST" name="addMultipleProductsToCart" finished-at="2025-07-01T02:44:14 IST" duration-ms="25666" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addMultipleProductsToCart -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.CartTest@6743e411]" started-at="2025-07-01T02:44:14 IST" name="tearDown" finished-at="2025-07-01T02:44:14 IST" duration-ms="390" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addMultipleProductsToCart status=SUCCESS method=CartTest.addMultipleProductsToCart()[pri:4, instance:tests.CartTest@6743e411] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.CartTest -->
      <class name="tests.UIUXTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.UIUXTest@f5958c9]" started-at="2025-07-01T02:46:37 IST" name="setup" finished-at="2025-07-01T02:46:39 IST" duration-ms="1861" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyProductTileAlignment()[pri:1, instance:tests.UIUXTest@f5958c9]" started-at="2025-07-01T02:46:39 IST" name="verifyProductTileAlignment" finished-at="2025-07-01T02:46:42 IST" duration-ms="3628" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyProductTileAlignment -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.UIUXTest@f5958c9]" started-at="2025-07-01T02:46:42 IST" name="tearDown" finished-at="2025-07-01T02:46:43 IST" duration-ms="292" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyProductTileAlignment status=SUCCESS method=UIUXTest.verifyProductTileAlignment()[pri:1, instance:tests.UIUXTest@f5958c9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.UIUXTest@f5958c9]" started-at="2025-07-01T02:46:43 IST" name="setup" finished-at="2025-07-01T02:46:44 IST" duration-ms="1769" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="checkVisibilityOfActionButtons()[pri:2, instance:tests.UIUXTest@f5958c9]" started-at="2025-07-01T02:46:44 IST" name="checkVisibilityOfActionButtons" finished-at="2025-07-01T02:46:48 IST" duration-ms="3803" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkVisibilityOfActionButtons -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.UIUXTest@f5958c9]" started-at="2025-07-01T02:46:48 IST" name="tearDown" finished-at="2025-07-01T02:46:48 IST" duration-ms="325" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkVisibilityOfActionButtons status=SUCCESS method=UIUXTest.checkVisibilityOfActionButtons()[pri:2, instance:tests.UIUXTest@f5958c9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.UIUXTest@f5958c9]" started-at="2025-07-01T02:46:48 IST" name="setup" finished-at="2025-07-01T02:46:50 IST" duration-ms="1688" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="checkFontConsistency()[pri:3, instance:tests.UIUXTest@f5958c9]" started-at="2025-07-01T02:46:50 IST" name="checkFontConsistency" finished-at="2025-07-01T02:46:54 IST" duration-ms="3842" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkFontConsistency -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.UIUXTest@f5958c9]" started-at="2025-07-01T02:46:54 IST" name="tearDown" finished-at="2025-07-01T02:46:54 IST" duration-ms="338" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkFontConsistency status=SUCCESS method=UIUXTest.checkFontConsistency()[pri:3, instance:tests.UIUXTest@f5958c9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.UIUXTest@f5958c9]" started-at="2025-07-01T02:46:54 IST" name="setup" finished-at="2025-07-01T02:46:56 IST" duration-ms="1757" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testAlertPopupStyling()[pri:4, instance:tests.UIUXTest@f5958c9]" started-at="2025-07-01T02:46:56 IST" name="testAlertPopupStyling" finished-at="2025-07-01T02:47:05 IST" duration-ms="8946" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAlertPopupStyling -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.UIUXTest@f5958c9]" started-at="2025-07-01T02:47:05 IST" name="tearDown" finished-at="2025-07-01T02:47:05 IST" duration-ms="373" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAlertPopupStyling status=SUCCESS method=UIUXTest.testAlertPopupStyling()[pri:4, instance:tests.UIUXTest@f5958c9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.UIUXTest -->
      <class name="tests.ProductBrowsingTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.ProductBrowsingTest@477b4cdf]" started-at="2025-07-01T02:45:37 IST" name="setup" finished-at="2025-07-01T02:45:39 IST" duration-ms="1930" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="browsePhonesCategory()[pri:1, instance:tests.ProductBrowsingTest@477b4cdf]" started-at="2025-07-01T02:45:39 IST" name="browsePhonesCategory" finished-at="2025-07-01T02:45:45 IST" duration-ms="5935" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browsePhonesCategory -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ProductBrowsingTest@477b4cdf]" started-at="2025-07-01T02:45:45 IST" name="tearDown" finished-at="2025-07-01T02:45:45 IST" duration-ms="406" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=browsePhonesCategory status=SUCCESS method=ProductBrowsingTest.browsePhonesCategory()[pri:1, instance:tests.ProductBrowsingTest@477b4cdf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.ProductBrowsingTest@477b4cdf]" started-at="2025-07-01T02:45:45 IST" name="setup" finished-at="2025-07-01T02:45:47 IST" duration-ms="1747" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="viewProductDetails()[pri:2, instance:tests.ProductBrowsingTest@477b4cdf]" started-at="2025-07-01T02:45:47 IST" name="viewProductDetails" finished-at="2025-07-01T02:45:54 IST" duration-ms="6588" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- viewProductDetails -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ProductBrowsingTest@477b4cdf]" started-at="2025-07-01T02:45:54 IST" name="tearDown" finished-at="2025-07-01T02:45:54 IST" duration-ms="531" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=viewProductDetails status=SUCCESS method=ProductBrowsingTest.viewProductDetails()[pri:2, instance:tests.ProductBrowsingTest@477b4cdf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.ProductBrowsingTest@477b4cdf]" started-at="2025-07-01T02:45:54 IST" name="setup" finished-at="2025-07-01T02:45:56 IST" duration-ms="1782" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="navigateToHomeFromNavbar()[pri:3, instance:tests.ProductBrowsingTest@477b4cdf]" started-at="2025-07-01T02:45:56 IST" name="navigateToHomeFromNavbar" finished-at="2025-07-01T02:46:06 IST" duration-ms="9709" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateToHomeFromNavbar -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ProductBrowsingTest@477b4cdf]" started-at="2025-07-01T02:46:06 IST" name="tearDown" finished-at="2025-07-01T02:46:06 IST" duration-ms="395" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=navigateToHomeFromNavbar status=SUCCESS method=ProductBrowsingTest.navigateToHomeFromNavbar()[pri:3, instance:tests.ProductBrowsingTest@477b4cdf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.ProductBrowsingTest@477b4cdf]" started-at="2025-07-01T02:46:06 IST" name="setup" finished-at="2025-07-01T02:46:08 IST" duration-ms="1711" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="navigateUsingNavbarLinks()[pri:4, instance:tests.ProductBrowsingTest@477b4cdf]" started-at="2025-07-01T02:46:08 IST" name="navigateUsingNavbarLinks" finished-at="2025-07-01T02:46:22 IST" duration-ms="13917" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateUsingNavbarLinks -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ProductBrowsingTest@477b4cdf]" started-at="2025-07-01T02:46:22 IST" name="tearDown" finished-at="2025-07-01T02:46:22 IST" duration-ms="422" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=navigateUsingNavbarLinks status=SUCCESS method=ProductBrowsingTest.navigateUsingNavbarLinks()[pri:4, instance:tests.ProductBrowsingTest@477b4cdf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.ProductBrowsingTest -->
      <class name="tests.ResponsiveDesignTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.ResponsiveDesignTest@233795b6]" started-at="2025-07-01T02:47:05 IST" name="setup" finished-at="2025-07-01T02:47:07 IST" duration-ms="1871" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyNoHorizontalScroll()[pri:0, instance:tests.ResponsiveDesignTest@233795b6]" started-at="2025-07-01T02:47:07 IST" name="verifyNoHorizontalScroll" finished-at="2025-07-01T02:47:13 IST" duration-ms="6003" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyNoHorizontalScroll -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ResponsiveDesignTest@233795b6]" started-at="2025-07-01T02:47:13 IST" name="tearDown" finished-at="2025-07-01T02:47:14 IST" duration-ms="338" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyNoHorizontalScroll status=SUCCESS method=ResponsiveDesignTest.verifyNoHorizontalScroll()[pri:0, instance:tests.ResponsiveDesignTest@233795b6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.ResponsiveDesignTest -->
      <class name="tests.LogoutTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.LogoutTest@77c2494c]" started-at="2025-07-01T02:46:22 IST" name="setup" finished-at="2025-07-01T02:46:24 IST" duration-ms="1714" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyLogoutAfterLogin()[pri:0, instance:tests.LogoutTest@77c2494c]" started-at="2025-07-01T02:46:24 IST" name="verifyLogoutAfterLogin" finished-at="2025-07-01T02:46:36 IST" duration-ms="12207" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLogoutAfterLogin -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.LogoutTest@77c2494c]" started-at="2025-07-01T02:46:36 IST" name="tearDown" finished-at="2025-07-01T02:46:37 IST" duration-ms="567" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLogoutAfterLogin status=SUCCESS method=LogoutTest.verifyLogoutAfterLogin()[pri:0, instance:tests.LogoutTest@77c2494c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.LogoutTest -->
    </test> <!-- Demoblaze Tests -->
  </suite> <!-- Demoblaze Automation Suite -->
</testng-results>
